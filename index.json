{
  "README.html": {
    "href": "README.html",
    "title": "C# Automation | C# Automation",
    "summary": "C# Automation This is repository which contains various projects that show how you can approach building your own framework using some set of technologies and tools. Table of Contents Getting started Prerequisites Building Running Deployment Built with PlaywrightXunit PlaywrightXunitParallel PlaywrightReqnrollMsTest SeleniumReqnrollNunit Common/Helpers Common/Helpers.Tests Contributing Versioning Authors License Getting started Simply open the solution file (CSharpAutomation.sln) from main project directory. Any commands should be run towards chosen project, so remember to cd into chosen project directory. Prerequisites Playwright Run this command from selected project directory (e.g. PlaywrightXunitParallel), replacing {{Configuration}} with current configuration (e.g. ChromiumDebug). pwsh bin/{{Configuration}}/net8.0/playwright.ps1 install If pwsh is not available, you have to install PowerShell. Building Use Visual Studio or execute following command to build the tests: dotnet build Running Use Visual Studio Test Explorer or execute following command to run the tests: dotnet test Deployment There are no deployment procedure established yet. Build with PlaywrightXunit Playwright Xunit Xunit.SkippableFact Allure.Xunit PlaywrightXunitParallel Playwright Xunit Xunit.SkippableFact FluentAssertions Allure.Xunit PlaywrightReqnrollMSTest SeleniumReqnrollNunit Common Helpers Json.NET Common Helpers Tests Allure.NUnit NUnit Moq Contributing There are no contribution rules established yet. Versioning Project versioning pattern is defined as follows: v{yy}.{M}.{d}.{r} Legend: {yy} - 2-digits year, range from 00 to 99 {M} - month, range from 1 to 12 {d} - day of the month, range from 1 to 31 {r} - revison number, incrementing for each daily version, starting from 0 Authors Bartlomiej Roszczypala - Gucu112 See also the list of contributors who participated in this project. License This project is licensed under the MIT License - see the LICENSE file for details."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Extensions.StringExtensions.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | C# Automation",
    "summary": "Class StringExtensions Namespace Gucu112.CSharp.Automation.Helpers.Extensions Assembly Gucu112.CSharp.Automation.Helpers.dll Provides extension methods for string manipulation. public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBytes(string, Encoding?) Converts the string to a byte array using the specified encoding. If no encoding is provided, UTF-8 encoding is used by default. public static byte[] GetBytes(this string text, Encoding? encoding = null) Parameters text string The string to convert. encoding Encoding The encoding to use (optional). Returns byte[] The byte array representation of the string. NormalizeSpace(string) Normalizes the whitespaces in the string by replacing consecutive whitespace characters with a single space. public static string NormalizeSpace(this string text) Parameters text string The string to normalize whitespaces. Returns string The normalized string. RemoveSpace(string) Removes all whitespace characters from the string. public static string RemoveSpace(this string text) Parameters text string The string to remove whitespaces from. Returns string The string without whitespaces."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Extensions.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Extensions.html",
    "title": "Namespace Gucu112.CSharp.Automation.Helpers.Extensions | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.Helpers.Extensions Classes StringExtensions Provides extension methods for string manipulation."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Models.IFileSystem.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Models.IFileSystem.html",
    "title": "Interface IFileSystem | C# Automation",
    "summary": "Interface IFileSystem Namespace Gucu112.CSharp.Automation.Helpers.Models Assembly Gucu112.CSharp.Automation.Helpers.dll Represents a file system. public interface IFileSystem Methods ReadStream(string) Reads a stream from the specified file path. Stream ReadStream(string path) Parameters path string The path of the file to read. Returns Stream The output stream containing the file data. WriteStream(string) Writes a stream to the specified file path. Stream WriteStream(string path) Parameters path string The path of the file to write. Returns Stream The input stream to write to the file."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Models.IJsonParse.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Models.IJsonParse.html",
    "title": "Interface IJsonParse | C# Automation",
    "summary": "Interface IJsonParse Namespace Gucu112.CSharp.Automation.Helpers.Models Assembly Gucu112.CSharp.Automation.Helpers.dll Provides methods for parsing JSON data. public interface IJsonParse Methods FromJsonFile<T>(string, JsonSettings?) Deserializes the JSON content from a file at the specified path into an object of type T. T? FromJsonFile<T>(string path, JsonSettings? settings = null) Parameters path string The path to the JSON file. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(Stream, JsonSettings?) Deserializes the JSON content from a Stream into an object of type T. T? FromJson<T>(Stream stream, JsonSettings? settings = null) Parameters stream Stream The Stream containing the JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(TextReader, JsonSettings?) Deserializes the JSON content from a TextReader into an object of type T. T? FromJson<T>(TextReader textReader, JsonSettings? settings = null) Parameters textReader TextReader The TextReader containing the JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(string, JsonSettings?) Deserializes the JSON content into an object of type T. T? FromJson<T>(string content, JsonSettings? settings = null) Parameters content string The JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. ToJsonFile(object?, string, JsonSettings?) Serializes an object into a file at the specified path using JSON format. void ToJsonFile(object? value, string path, JsonSettings? settings = null) Parameters value object The object to serialize. path string The path to the JSON file. settings JsonSettings The JSON settings to use for serialization. ToJsonStream<T>(object?, JsonSettings?, T?) Serializes an object into a Stream using JSON format. T ToJsonStream<T>(object? value, JsonSettings? settings = null, T? stream = null) where T : Stream Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. stream T The Stream to write the JSON content to. Returns T The Stream containing the serialized JSON content. Type Parameters T The type of the Stream to use. ToJsonString(object?, JsonSettings?) Serializes an object into a JSON string. string ToJsonString(object? value, JsonSettings? settings = null) Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. Returns string The JSON string representation of the object. ToJsonWriter<T>(object?, JsonSettings?, T?) Serializes an object into a TextWriter using JSON format. T ToJsonWriter<T>(object? value, JsonSettings? settings = null, T? textWriter = null) where T : TextWriter Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. textWriter T The TextWriter to write the JSON content to. Returns T The TextWriter containing the serialized JSON content. Type Parameters T The type of the TextWriter to use."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Models.JsonSettings.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Models.JsonSettings.html",
    "title": "Class JsonSettings | C# Automation",
    "summary": "Class JsonSettings Namespace Gucu112.CSharp.Automation.Helpers.Models Assembly Gucu112.CSharp.Automation.Helpers.dll Represents the settings for JSON serialization and deserialization. public sealed class JsonSettings : JsonSerializerSettings Inheritance object JsonSerializerSettings JsonSettings Inherited Members JsonSerializerSettings.ReferenceLoopHandling JsonSerializerSettings.MissingMemberHandling JsonSerializerSettings.ObjectCreationHandling JsonSerializerSettings.NullValueHandling JsonSerializerSettings.DefaultValueHandling JsonSerializerSettings.Converters JsonSerializerSettings.PreserveReferencesHandling JsonSerializerSettings.TypeNameHandling JsonSerializerSettings.MetadataPropertyHandling JsonSerializerSettings.TypeNameAssemblyFormat JsonSerializerSettings.TypeNameAssemblyFormatHandling JsonSerializerSettings.ConstructorHandling JsonSerializerSettings.ContractResolver JsonSerializerSettings.EqualityComparer JsonSerializerSettings.ReferenceResolver JsonSerializerSettings.ReferenceResolverProvider JsonSerializerSettings.TraceWriter JsonSerializerSettings.Binder JsonSerializerSettings.SerializationBinder JsonSerializerSettings.Error JsonSerializerSettings.Context JsonSerializerSettings.DateFormatString JsonSerializerSettings.MaxDepth JsonSerializerSettings.Formatting JsonSerializerSettings.DateFormatHandling JsonSerializerSettings.DateTimeZoneHandling JsonSerializerSettings.DateParseHandling JsonSerializerSettings.FloatFormatHandling JsonSerializerSettings.FloatParseHandling JsonSerializerSettings.StringEscapeHandling JsonSerializerSettings.Culture JsonSerializerSettings.CheckAdditionalContent object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors JsonSettings() Assigns default values to the base JSON settings object. public JsonSettings() Properties Encoding Gets or sets the type of JSON text encoding to use. The default is UTF8. public Encoding Encoding { get; set; } Property Value Encoding IndentChar Gets or sets which character to use for indenting when formatting JSON. The default is space. public char IndentChar { get; set; } Property Value char Indentation Gets or sets the number of characters to use for each level in the hierarchy when formatting JSON. The default is 2. public int Indentation { get; set; } Property Value int"
  },
  "api/Gucu112.CSharp.Automation.Helpers.Models.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Models.html",
    "title": "Namespace Gucu112.CSharp.Automation.Helpers.Models | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.Helpers.Models Classes JsonSettings Represents the settings for JSON serialization and deserialization. Interfaces IFileSystem Represents a file system. IJsonParse Provides methods for parsing JSON data."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Parsers.JsonParse.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Parsers.JsonParse.html",
    "title": "Class JsonParse | C# Automation",
    "summary": "Class JsonParse Namespace Gucu112.CSharp.Automation.Helpers.Parsers Assembly Gucu112.CSharp.Automation.Helpers.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class JsonParse : IJsonParse Inheritance object JsonParse Implements IJsonParse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FromJsonFile<T>(string, JsonSettings?) Deserializes the JSON content from a file at the specified path into an object of type T. public T? FromJsonFile<T>(string path, JsonSettings? settings = null) Parameters path string The path to the JSON file. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(Stream, JsonSettings?) Deserializes the JSON content from a Stream into an object of type T. public T? FromJson<T>(Stream stream, JsonSettings? settings = null) Parameters stream Stream The Stream containing the JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(TextReader, JsonSettings?) Deserializes the JSON content from a TextReader into an object of type T. public T? FromJson<T>(TextReader textReader, JsonSettings? settings = null) Parameters textReader TextReader The TextReader containing the JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(string, JsonSettings?) Deserializes the JSON content into an object of type T. public T? FromJson<T>(string content, JsonSettings? settings = null) Parameters content string The JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. ToJsonFile(object?, string, JsonSettings?) Serializes an object into a file at the specified path using JSON format. public void ToJsonFile(object? value, string path, JsonSettings? settings = null) Parameters value object The object to serialize. path string The path to the JSON file. settings JsonSettings The JSON settings to use for serialization. ToJsonStream<T>(object?, JsonSettings?, T?) Serializes an object into a Stream using JSON format. public T ToJsonStream<T>(object? value, JsonSettings? settings = null, T? stream = null) where T : Stream Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. stream T The Stream to write the JSON content to. Returns T The Stream containing the serialized JSON content. Type Parameters T The type of the Stream to use. ToJsonString(object?, JsonSettings?) Serializes an object into a JSON string. public string ToJsonString(object? value, JsonSettings? settings = null) Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. Returns string The JSON string representation of the object. ToJsonWriter<T>(object?, JsonSettings?, T?) Serializes an object into a TextWriter using JSON format. public T ToJsonWriter<T>(object? value, JsonSettings? settings = null, T? textWriter = null) where T : TextWriter Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. textWriter T The TextWriter to write the JSON content to. Returns T The TextWriter containing the serialized JSON content. Type Parameters T The type of the TextWriter to use."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Parsers.JsonParseSettings.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Parsers.JsonParseSettings.html",
    "title": "Class JsonParseSettings | C# Automation",
    "summary": "Class JsonParseSettings Namespace Gucu112.CSharp.Automation.Helpers.Parsers Assembly Gucu112.CSharp.Automation.Helpers.dll Represents a class that provides JSON parsing settings. public static class JsonParseSettings Inheritance object JsonParseSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Json Gets or sets the JSON parsing settings. public static JsonSettings Json { get; set; } Property Value JsonSettings"
  },
  "api/Gucu112.CSharp.Automation.Helpers.Parsers.Parse.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Parsers.Parse.html",
    "title": "Class Parse | C# Automation",
    "summary": "Class Parse Namespace Gucu112.CSharp.Automation.Helpers.Parsers Assembly Gucu112.CSharp.Automation.Helpers.dll Represents a class that provides parsing methods. public static partial class Parse Inheritance object Parse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FromJsonFile<T>(string, JsonSettings?) Deserializes the JSON content from a file at the specified path into an object of type T. public static T? FromJsonFile<T>(string path, JsonSettings? settings = null) Parameters path string The path to the JSON file. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(Stream, JsonSettings?) Deserializes the JSON content from a Stream into an object of type T. public static T? FromJson<T>(Stream stream, JsonSettings? settings = null) Parameters stream Stream The Stream containing the JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(TextReader, JsonSettings?) Deserializes the JSON content from a TextReader into an object of type T. public static T? FromJson<T>(TextReader textReader, JsonSettings? settings = null) Parameters textReader TextReader The TextReader containing the JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. FromJson<T>(string, JsonSettings?) Deserializes the JSON content into an object of type T. public static T? FromJson<T>(string content, JsonSettings? settings = null) Parameters content string The JSON content to deserialize. settings JsonSettings The JSON settings to use for deserialization. Returns T The deserialized object of type T. Type Parameters T The type of the object to deserialize. ToJsonFile(object?, string, JsonSettings?) Serializes an object into a file at the specified path using JSON format. public static void ToJsonFile(object? value, string path, JsonSettings? settings = null) Parameters value object The object to serialize. path string The path to the JSON file. settings JsonSettings The JSON settings to use for serialization. ToJsonStream<T>(object?, JsonSettings?, T?) Serializes an object into a Stream using JSON format. public static T ToJsonStream<T>(object? value, JsonSettings? settings = null, T? stream = null) where T : Stream Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. stream T The Stream to write the JSON content to. Returns T The Stream containing the serialized JSON content. Type Parameters T The type of the Stream to use. ToJsonString(object?, JsonSettings?) Serializes an object into a JSON string. public static string ToJsonString(object? value, JsonSettings? settings = null) Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. Returns string The JSON string representation of the object. ToJsonWriter<T>(object?, JsonSettings?, T?) Serializes an object into a TextWriter using JSON format. public static T ToJsonWriter<T>(object? value, JsonSettings? settings = null, T? textWriter = null) where T : TextWriter Parameters value object The object to serialize. settings JsonSettings The JSON settings to use for serialization. textWriter T The TextWriter to write the JSON content to. Returns T The TextWriter containing the serialized JSON content. Type Parameters T The type of the TextWriter to use."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Parsers.ParseSettings.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Parsers.ParseSettings.html",
    "title": "Class ParseSettings | C# Automation",
    "summary": "Class ParseSettings Namespace Gucu112.CSharp.Automation.Helpers.Parsers Assembly Gucu112.CSharp.Automation.Helpers.dll Represents a class that provides parsing settings. public static partial class ParseSettings Inheritance object ParseSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Json Gets or sets the JSON parsing settings. public static JsonSettings Json { get; set; } Property Value JsonSettings"
  },
  "api/Gucu112.CSharp.Automation.Helpers.Parsers.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Parsers.html",
    "title": "Namespace Gucu112.CSharp.Automation.Helpers.Parsers | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.Helpers.Parsers Classes JsonParse Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. JsonParseSettings Represents a class that provides JSON parsing settings. Parse Represents a class that provides parsing methods. ParseSettings Represents a class that provides parsing settings."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Providers.FileSystemProvider.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Providers.FileSystemProvider.html",
    "title": "Class FileSystemProvider | C# Automation",
    "summary": "Class FileSystemProvider Namespace Gucu112.CSharp.Automation.Helpers.Providers Assembly Gucu112.CSharp.Automation.Helpers.dll Represents an implementation of file system. public class FileSystemProvider : IFileSystem Inheritance object FileSystemProvider Implements IFileSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReadStream(string) Reads a stream from the specified file path. public Stream ReadStream(string path) Parameters path string The path of the file to read. Returns Stream The output stream containing the file data. WriteStream(string) Writes a stream to the specified file path. public Stream WriteStream(string path) Parameters path string The path of the file to write. Returns Stream The input stream to write to the file."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Providers.RegexProvider.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Providers.RegexProvider.html",
    "title": "Class RegexProvider | C# Automation",
    "summary": "Class RegexProvider Namespace Gucu112.CSharp.Automation.Helpers.Providers Assembly Gucu112.CSharp.Automation.Helpers.dll Provides a collection of regular expressions for common string operations. public static class RegexProvider Inheritance object RegexProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AnyWhitespaceRegex() [GeneratedRegex(\"\\\\s+\")] public static Regex AnyWhitespaceRegex() Returns Regex Remarks Pattern: \\\\s+ Explanation: ○ Match a whitespace character atomically at least once. NormalizeSpaceRegex() [GeneratedRegex(\"\\\\s{2,}|[^\\\\S ]+\")] public static Regex NormalizeSpaceRegex() Returns Regex Remarks Pattern: \\\\s{2,}|[^\\\\S ]+ Explanation: ○ Match with 2 alternative expressions, atomically. ○ Match a whitespace character atomically at least twice. ○ Match a character in the set [^ \\S] atomically at least once."
  },
  "api/Gucu112.CSharp.Automation.Helpers.Providers.html": {
    "href": "api/Gucu112.CSharp.Automation.Helpers.Providers.html",
    "title": "Namespace Gucu112.CSharp.Automation.Helpers.Providers | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.Helpers.Providers Classes FileSystemProvider Represents an implementation of file system. RegexProvider Provides a collection of regular expressions for common string operations."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures.PlaywrightFixture.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures.PlaywrightFixture.html",
    "title": "Class PlaywrightFixture | C# Automation",
    "summary": "Class PlaywrightFixture Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents a controller for working with Playwright. public class PlaywrightFixture : IAsyncLifetime Inheritance object PlaywrightFixture Implements IAsyncLifetime Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Browser Gets the browser instance. public IBrowser Browser { get; } Property Value IBrowser BrowserContext Gets the browser context instance. public IBrowserContext BrowserContext { get; } Property Value IBrowserContext BrowserOptions Gets the context options for the browser. public BrowserNewContextOptions BrowserOptions { get; } Property Value BrowserNewContextOptions LaunchOptions Gets the launch options for the browser. public BrowserTypeLaunchOptions LaunchOptions { get; } Property Value BrowserTypeLaunchOptions Methods DisposeAsync() Disposes the Playwright fixture asynchronously. public Task DisposeAsync() Returns Task A task representing the asynchronous operation. InitializeAsync() Initializes the Playwright fixture asynchronously. public Task InitializeAsync() Returns Task A task representing the asynchronous operation."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures.SettingsCollection.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures.SettingsCollection.html",
    "title": "Class SettingsCollection | C# Automation",
    "summary": "Class SettingsCollection Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents a collection definition for the SettingsFixture. [CollectionDefinition(\"SettingsFixture\")] public class SettingsCollection : ICollectionFixture<SettingsFixture> Inheritance object SettingsCollection Implements ICollectionFixture<SettingsFixture> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures.SettingsFixture.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures.SettingsFixture.html",
    "title": "Class SettingsFixture | C# Automation",
    "summary": "Class SettingsFixture Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents a controller that provides configuration settings. public class SettingsFixture : ISettings Inheritance object SettingsFixture Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SettingsFixture() Initializes a new instance of the SettingsFixture class. Reads and builds the configuration object from the appConfig.json file. public SettingsFixture() Properties BrowserName Gets the current browser name. public string BrowserName { get; } Property Value string BrowserOptions Gets the browser options. public BrowserNewContextOptions BrowserOptions { get; } Property Value BrowserNewContextOptions EntryPoints Gets the list of entry points. public IList<EntryPoint> EntryPoints { get; } Property Value IList<EntryPoint> Environment Gets the current environment name. public string Environment { get; } Property Value string ExpectTimeout Gets the expect timeout in milliseconds. public float ExpectTimeout { get; } Property Value float IsVideoEnabled Gets a value indicating whether video recording is enabled. public bool IsVideoEnabled { get; } Property Value bool LaunchOptions Gets the launch options. public BrowserTypeLaunchOptions LaunchOptions { get; } Property Value BrowserTypeLaunchOptions RecordVideoDir Gets the video recording directory path. public string? RecordVideoDir { get; } Property Value string RootPath Gets the current root directory path. public string RootPath { get; } Property Value string"
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures.html",
    "title": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Fixtures Classes PlaywrightFixture Represents a controller for working with Playwright. SettingsCollection Represents a collection definition for the SettingsFixture. SettingsFixture Represents a controller that provides configuration settings."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute.CategoryAttribute.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute.CategoryAttribute.html",
    "title": "Class CategoryAttribute | C# Automation",
    "summary": "Class CategoryAttribute Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents an attribute that specifies the category of a test. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = true)] [TraitDiscoverer(\"Gucu112.CSharp.Automation.PlaywrightXunitParallel.TraitDiscoverer\", \"PlaywrightXunitParallel\")] public class CategoryAttribute : Attribute, ITraitAttribute Inheritance object Attribute CategoryAttribute Implements ITraitAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryAttribute(TestCategory) Represents an attribute that specifies the category of a test. public CategoryAttribute(TestCategory category) Parameters category TestCategory The category of the test. Properties Category Gets or sets the test category. public TestCategory Category { get; set; } Property Value TestCategory"
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute.PriorityAttribute.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute.PriorityAttribute.html",
    "title": "Class PriorityAttribute | C# Automation",
    "summary": "Class PriorityAttribute Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents an attribute that specifies the priority of a test. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] [TraitDiscoverer(\"Gucu112.CSharp.Automation.PlaywrightXunitParallel.TraitDiscoverer\", \"PlaywrightXunitParallel\")] public class PriorityAttribute : Attribute, ITraitAttribute Inheritance object Attribute PriorityAttribute Implements ITraitAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PriorityAttribute(TestPriority) Represents an attribute that specifies the priority of a test. public PriorityAttribute(TestPriority priority) Parameters priority TestPriority The priority of the test. Properties Priority Gets or sets the test priority. public TestPriority Priority { get; set; } Property Value TestPriority"
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute.html",
    "title": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Attribute Classes CategoryAttribute Represents an attribute that specifies the category of a test. PriorityAttribute Represents an attribute that specifies the priority of a test."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.EntryPoint.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.EntryPoint.html",
    "title": "Class EntryPoint | C# Automation",
    "summary": "Class EntryPoint Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents the entry point for an application. public class EntryPoint Inheritance object EntryPoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets or sets the name of the entry point. public string Name { get; set; } Property Value string Url Gets or sets the URL address of the entry point. public string Url { get; set; } Property Value string"
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum.TestCategory.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum.TestCategory.html",
    "title": "Enum TestCategory | C# Automation",
    "summary": "Enum TestCategory Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents the test categories. public enum TestCategory Fields Browser = 1 Represents tests focused on browser-specific functionality. Google = 2 Represents tests performed on Google search page. Settings = 0 Represents tests related to configuration settings."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum.TestPriority.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum.TestPriority.html",
    "title": "Enum TestPriority | C# Automation",
    "summary": "Enum TestPriority Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents the test priorities. public enum TestPriority Fields Critical = 0 Covers core, critical functionality of the application. High = 1 Covers important functionality of the application. Low = 3 Covers non-essential functionality or enhancements of the application. Medium = 2 Covers standard functionality of the application. Trivial = 4 Covers insignificant and cosmetic functionality of the application."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum.html",
    "title": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Enum Enums TestCategory Represents the test categories. TestPriority Represents the test priorities."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Interface.ISettings.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Interface.ISettings.html",
    "title": "Interface ISettings | C# Automation",
    "summary": "Interface ISettings Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Interface Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents the configuration settings. public interface ISettings Properties BrowserName Gets the current browser name. string BrowserName { get; } Property Value string BrowserOptions Gets the browser options. BrowserNewContextOptions BrowserOptions { get; } Property Value BrowserNewContextOptions EntryPoints Gets the list of entry points. IList<EntryPoint> EntryPoints { get; } Property Value IList<EntryPoint> Environment Gets the current environment name. string Environment { get; } Property Value string ExpectTimeout Gets the expect timeout in milliseconds. float ExpectTimeout { get; } Property Value float IsVideoEnabled Gets a value indicating whether video recording is enabled. bool IsVideoEnabled { get; } Property Value bool LaunchOptions Gets the launch options. BrowserTypeLaunchOptions LaunchOptions { get; } Property Value BrowserTypeLaunchOptions RecordVideoDir Gets the video recording directory path. string? RecordVideoDir { get; } Property Value string RootPath Gets the current root directory path. string RootPath { get; } Property Value string"
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Interface.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Interface.html",
    "title": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Interface | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.Interface Interfaces ISettings Represents the configuration settings."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models.html",
    "title": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Models Classes EntryPoint Represents the entry point for an application."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase.NameOrderer.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase.NameOrderer.html",
    "title": "Class NameOrderer | C# Automation",
    "summary": "Class NameOrderer Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents an orderer that orders test cases by their display name. public class NameOrderer : ITestCaseOrderer Inheritance object NameOrderer Implements ITestCaseOrderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssemblyName Represents the assembly name in which the orderer is defined. public const string AssemblyName = \"PlaywrightXunitParallel\" Field Value string FullTypeName Represents the full type name of the orderer. public const string FullTypeName = \"Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase.NameOrderer\" Field Value string Methods OrderTestCases<TTestCase>(IEnumerable<TTestCase>) Orders the test cases by their display name. public IEnumerable<TTestCase> OrderTestCases<TTestCase>(IEnumerable<TTestCase> testCases) where TTestCase : ITestCase Parameters testCases IEnumerable<TTestCase> The test cases to order. Returns IEnumerable<TTestCase> The ordered test cases. Type Parameters TTestCase The type of the test case."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase.PriorityOrderer.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase.PriorityOrderer.html",
    "title": "Class PriorityOrderer | C# Automation",
    "summary": "Class PriorityOrderer Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents an orderer that orders test cases by their priority. public class PriorityOrderer : ITestCaseOrderer Inheritance object PriorityOrderer Implements ITestCaseOrderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssemblyName Represents the assembly name in which the orderer is defined. public const string AssemblyName = \"PlaywrightXunitParallel\" Field Value string FullTypeName Represents the full type name of the orderer. public const string FullTypeName = \"Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase.PriorityOrderer\" Field Value string Methods OrderTestCases<TTestCase>(IEnumerable<TTestCase>) Orders the test cases by their priority. public IEnumerable<TTestCase> OrderTestCases<TTestCase>(IEnumerable<TTestCase> testCases) where TTestCase : ITestCase Parameters testCases IEnumerable<TTestCase> The test cases to order. Returns IEnumerable<TTestCase> The ordered test cases. Type Parameters TTestCase The type of the test case."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase.html",
    "title": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Orderers.TestCase Classes NameOrderer Represents an orderer that orders test cases by their display name. PriorityOrderer Represents an orderer that orders test cases by their priority."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages.BasePage.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages.BasePage.html",
    "title": "Class BasePage | C# Automation",
    "summary": "Class BasePage Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents a synchronous base page. public abstract class BasePage : BasePageAsync, IAsyncLifetime, IDisposable Inheritance object BasePageAsync BasePage Implements IAsyncLifetime IDisposable Inherited Members BasePageAsync.BrowserContext BasePageAsync.Context BasePageAsync.BaseUrl BasePageAsync.Settings BasePageAsync.InitializeAsync() BasePageAsync.DisposeAsync() BasePageAsync.BeforeGoToBaseUrl() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BasePage(PlaywrightFixture) Initializes the page synchronously. public BasePage(PlaywrightFixture playwright) Parameters playwright PlaywrightFixture The Playwright controller. Methods Dispose() Disposes the page synchronously. public void Dispose()"
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages.BasePageAsync.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages.BasePageAsync.html",
    "title": "Class BasePageAsync | C# Automation",
    "summary": "Class BasePageAsync Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents an asynchronous base page. public abstract class BasePageAsync : IAsyncLifetime Inheritance object BasePageAsync Implements IAsyncLifetime Derived BasePage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BasePageAsync(PlaywrightFixture) Represents an asynchronous base page. protected BasePageAsync(PlaywrightFixture playwright) Parameters playwright PlaywrightFixture The Playwright controller. Properties BaseUrl Gets the base URL address. public abstract string BaseUrl { get; } Property Value string BrowserContext Gets the browser context. public IBrowserContext BrowserContext { get; } Property Value IBrowserContext Context Gets the page context. public IPage Context { get; } Property Value IPage Settings Gets the settings controller. protected static SettingsFixture Settings { get; } Property Value SettingsFixture Methods BeforeGoToBaseUrl() Executes actions before navigating to the base URL. public virtual Task BeforeGoToBaseUrl() Returns Task A task representing the asynchronous operation. DisposeAsync() Disposes the page asynchronously. public Task DisposeAsync() Returns Task A task representing the asynchronous operation. InitializeAsync() Initializes the page asynchronously. public Task InitializeAsync() Returns Task A task representing the asynchronous operation."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages.html",
    "title": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel.Pages Classes BasePage Represents a synchronous base page. BasePageAsync Represents an asynchronous base page."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.TraitDiscoverer.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.TraitDiscoverer.html",
    "title": "Class TraitDiscoverer | C# Automation",
    "summary": "Class TraitDiscoverer Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel Assembly Gucu112.CSharp.Automation.PlaywrightXunitParallel.dll Represents class for discovering traits used for categorizing tests. public class TraitDiscoverer : ITraitDiscoverer Inheritance object TraitDiscoverer Implements ITraitDiscoverer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssemblyName Represents the assembly name in which the trait discoverer is defined. public const string AssemblyName = \"PlaywrightXunitParallel\" Field Value string FullTypeName Represents the full type name of the trait discoverer. public const string FullTypeName = \"Gucu112.CSharp.Automation.PlaywrightXunitParallel.TraitDiscoverer\" Field Value string Methods GetTraits(IAttributeInfo) Gets the traits from the given attribute information. public IEnumerable<KeyValuePair<string, string>> GetTraits(IAttributeInfo traitAttribute) Parameters traitAttribute IAttributeInfo The attribute information. Returns IEnumerable<KeyValuePair<string, string>> The traits as key-value pairs."
  },
  "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.html": {
    "href": "api/Gucu112.CSharp.Automation.PlaywrightXunitParallel.html",
    "title": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel | C# Automation",
    "summary": "Namespace Gucu112.CSharp.Automation.PlaywrightXunitParallel Classes TraitDiscoverer Represents class for discovering traits used for categorizing tests."
  },
  "content/getting-started.html": {
    "href": "content/getting-started.html",
    "title": "Getting Started | C# Automation",
    "summary": "Getting Started"
  },
  "content/introduction.html": {
    "href": "content/introduction.html",
    "title": "Introduction | C# Automation",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "C# Automation | C# Automation",
    "summary": "C# Automation This is repository which contains various projects that show how you can approach building your own framework using some set of technologies and tools. Table of Contents Getting started Prerequisites Building Running Deployment Built with PlaywrightXunit PlaywrightXunitParallel PlaywrightReqnrollMsTest SeleniumReqnrollNunit Common/Helpers Common/Helpers.Tests Contributing Versioning Authors License Getting started Simply open the solution file (CSharpAutomation.sln) from main project directory. Any commands should be run towards chosen project, so remember to cd into chosen project directory. Prerequisites Playwright Run this command from selected project directory (e.g. PlaywrightXunitParallel), replacing {{Configuration}} with current configuration (e.g. ChromiumDebug). pwsh bin/{{Configuration}}/net8.0/playwright.ps1 install If pwsh is not available, you have to install PowerShell. Building Use Visual Studio or execute following command to build the tests: dotnet build Running Use Visual Studio Test Explorer or execute following command to run the tests: dotnet test Deployment There are no deployment procedure established yet. Build with PlaywrightXunit Playwright Xunit Xunit.SkippableFact Allure.Xunit PlaywrightXunitParallel Playwright Xunit Xunit.SkippableFact FluentAssertions Allure.Xunit PlaywrightReqnrollMSTest SeleniumReqnrollNunit Common Helpers Json.NET Common Helpers Tests Allure.NUnit NUnit Moq Contributing There are no contribution rules established yet. Versioning Project versioning pattern is defined as follows: v{yy}.{M}.{d}.{r} Legend: {yy} - 2-digits year, range from 00 to 99 {M} - month, range from 1 to 12 {d} - day of the month, range from 1 to 31 {r} - revison number, incrementing for each daily version, starting from 0 Authors Bartlomiej Roszczypala - Gucu112 See also the list of contributors who participated in this project. License This project is licensed under the MIT License - see the LICENSE file for details."
  }
}